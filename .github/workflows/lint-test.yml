name: Chart Dev CI

on: [pull_request]

jobs:
  lint_test_package_development:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install Helm 3
      uses: Azure/setup-helm@v1
      with:
        version: 'v3.1.0'

    # - name: Lint charts
    #   run: ls -d charts/* | xargs helm lint

    # - name: Create kind cluster
    #   uses: helm/kind-action@v1.0.0-alpha.3
      # with:
      #   install_local_path_provisioner: true

    # - name: Install charts
    #   run: ls -d charts/* | xargs helm install -g

    - name: Save charts locally and push to remote registry
      run: |
        export HELM_EXPERIMENTAL_OCI=1
        helm version
        az configure --defaults acr=nhsuk
        az acr login
        az acr helm repo add

        # test pushing specific chart
        # helm --debug chart save ./charts/tester/ nhsuk.azurecr.io/helm/tester-direct:latest
        # helm --debug chart push nhsuk.azurecr.io/helm/tester-direct:latest

        # package the charts
        ls -d charts/* | xargs -I {} -- sh -c 'helm package ./{} --version $(helm show chart {} | grep version | cut -d " " -f 2)-$(git rev-parse --short HEAD:./{})'
        # check if chart exists and only push if it doesn't
        for chart in *.tgz; do
          # helm show chart $chart | grep ^name: | cut -d ' ' -f 2 | xargs -I name az acr helm show name --version $(
          az acr helm show $(echo ${chart%.*} | cut -d '-' -f 1) --version $(echo ${chart%.*} | cut -d '-' -f 2)
          retval=$?
          if [ $retval -eq 0 ]; then
            echo "$chart exists, not going to push again."
          elif [ $retval -eq 1 ]; then
            echo "Error response - indicates $chart doesn't exist, will attempt to push to repo."
            az acr helm push $chart --verbose
          fi
        done
        # ls *.tgz | xargs -I chart az acr helm push chart --force

        # ls -d charts/* | xargs -I {} -- sh -c 'helm chart save ./{} nhsuk.azurecr.io/helm/$(basename {}):$(helm show chart {} | grep version | cut -d " " -f 2)-$(git rev-parse --short HEAD:./{})'
        # ls -d charts/* | xargs -I {} -- sh -c 'helm chart push nhsuk.azurecr.io/helm/$(basename {}):$(helm show chart {} | grep version | cut -d " " -f 2)-$(git rev-parse --short HEAD:./{})'
